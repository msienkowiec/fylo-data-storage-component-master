:root {
    --clr-primary-gradient: hsl(6, 100%, 80%) to hsl(335, 100%, 65%);

    --clr-neutral-pale-blue: hsl(243, 100%, 93%);
    --clr-neutral-grayish-blue: hsl(229, 7%, 55%);
    --clr-neutral-dark-blue: hsl(228, 56%, 26%);
    --clr-neutral-very-dark-blue: hsl(229, 57%, 11%);
    --clr-neutral-white: hsl(0, 0%, 100%);

    --fs-primary: 0.875rem;

    --ff-primary: 'Raleway', sans-serif;
    
    --fw-regular: 400;
    --fw-semiBold: 700;
}

/* reset */
*, *::before, *::after {
    box-sizing: border-box;
}

* {
    margin: 0;
}

html, body {
    min-height: 100%;
}

body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}

img, picture, video, canvas, svg {
    display: block;
    max-width: 100vh;
}

input, button, textarea, select {
    font: inherit;
}

p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
}

#root, #__next {
    isolation: isolate;
}

/* layout */

body {
    min-height: 100vh;
    display: grid;
    place-content: center;

    background-image: url(./images/bg-mobile.png);
    background-repeat: no-repeat;
    background-size: cover;
}

.container { 
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

header {
    min-width: 20.5rem;
    background-color: var(--clr-neutral-dark-blue);
    padding: 2.4375rem;
    border-radius: 0.75rem 6rem 0.75rem 0.75rem;
}

.hidden {
    display: none;
}

.buttons-container {
    margin-top: 2rem;
    display: flex;
    gap: 1rem;
}

button {
    border: none;
    border-radius: 0.5rem;
    background-color: var(--clr-neutral-very-dark-blue);
    padding: 0.75rem;
    
}

main {
    min-width: 20.5rem;
    position: relative;
    background-color: var(--clr-neutral-dark-blue);
    padding: 2rem 2.4375rem 2.75rem;
    border-radius: 0.75rem;
    
    font-family: var(--ff-primary);
}

.left-amount {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 50%);

    background-color: var(--clr-neutral-white);
    padding: .375rem 1.5rem;
    border-radius: 0.5rem;
}

.left-amount p {
    display: flex;
    gap: .75rem;
    font-weight: var(--fw-semiBold);
    font-size: 2.5rem;
    color: var(--clr-neutral-very-dark-blue);
}

.left-amount span {
    font-size: .75rem;
    text-transform: uppercase;
    letter-spacing: 0.1em;
    color: var(--clr-neutral-grayish-blue);
    align-self: center;
    white-space: nowrap;
}

.storage > p {
    font-size: var(--fs-primary);
    font-weight: var(--fw-regular);
    color: var(--clr-neutral-pale-blue);
    text-align: center;
}

.storage > p > span {
    font-weight: var(--fw-semiBold);
}

.bar {
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 1rem;
}

.bar__progress {
    background-image: linear-gradient(to right, hsl(6, 100%, 80%), hsl(335, 100%, 65%));
    background-clip: padding-box;
    border: 0.125rem solid rgba(0, 0, 0, 0);
    border-radius: 1rem;
    width: 75%;
    margin: 0.75rem 0 0.5rem;
}

.bar__progress__mark {
    height: 0.875rem;
    width: 0.875rem;
    margin-left: auto;
    background-color: var(--clr-neutral-white);
    background-clip: padding-box;
    border: 0.125rem solid rgba(0, 0, 0, 0);
    border-radius: 50%;
}


.start-end-values {
    display: flex;
    justify-content: space-between;
}

.start-end-values > p {
    font-size: .75rem;
    color: var(--clr-neutral-pale-blue);
    font-weight: var(--fw-semiBold);
}

@media (min-width: 1024px) {
    body {
        background-color: var(--clr-neutral-very-dark-blue);
        background-image: url(./images/bg-desktop.png);
        background-size: contain;
        background-position: bottom;
    }

    .container { 
        flex-direction: row;
        gap: 2rem;
    }

    header {
        min-width: 22rem;
        background-color: var(--clr-neutral-dark-blue);
        padding: 2.4375rem;
        border-radius: 0.75rem 6rem 0.75rem 0.75rem;
    }
    
    main {
        min-width: 33.5rem;
        align-self: flex-end;        
    }

    .storage {
        position: relative;
    }

    .left-amount {
        top: 0;
        right: 0;
        bottom: auto;
        left: auto;
        transform: translate(0, -100%);
    }

    .storage > p {
        text-align: start;
    }
}
